@model Bush.Models.Empolyee

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Empolyee</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.salary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.salary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.salary, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Maneger, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Maneger, ViewBag.Emp1 as SelectList, "--select--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Maneger, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
        @* <div class="col-md-10">
            @{
                List<SelectListItem> lst = new List<SelectListItem>();
                lst.Add(new SelectListItem { Text = "Male", Value = "Male" });
                lst.Add(new SelectListItem { Text = "Female", Value = "Female" });
            }
            @Html.DropDownListFor(model => model.gender, lst, "Select gender", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.gender,"", new { @class = "text-danger" })
            </div>*@
        <div class="col-md-10">
            @Html.RadioButton(name: "gender", value: "Male") Male

            @Html.RadioButton(name: "gender", value: "Female") Female

            @Html.RadioButton(name: "gender", value: "Other") Other
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<SelectListItem> lis = new List<SelectListItem>();
                lis.Add(new SelectListItem { Text = "MR", Value = "MR" });
                lis.Add(new SelectListItem { Text = "HR", Value = "HR" });
                lis.Add(new SelectListItem { Text = "IT", Value = "IT" });
                lis.Add(new SelectListItem { Text = "AC", Value = "AC" });
                lis.Add(new SelectListItem { Text = "EC", Value = "EC" });
            }
            @Html.DropDownListFor(model => model.Department, lis, "Select Post", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<SelectListItem> lie = new List<SelectListItem>();
                lie.Add(new SelectListItem { Text = "Developer", Value = "Developer" });
                lie.Add(new SelectListItem { Text = "Project Maneger", Value = "Project Maneger" });
                lie.Add(new SelectListItem { Text = "QA", Value = "QA" });
                lie.Add(new SelectListItem { Text = "Data Analyst", Value = "Data Analyst" });
                lie.Add(new SelectListItem { Text = "Tranni", Value = "Tranni" });
            }
            @Html.DropDownListFor(model => model.Role, lie, "Select Role", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
                    }

<button >
    @Html.ActionLink("Back to List", "Index")
</button>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

   }
